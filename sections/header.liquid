<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link
  rel="stylesheet"
  href="{{ 'component-cart-notification.css' | asset_url }}"
  media="print"
  onload="this.media='all'"
>

{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

{%- if section.settings.menu_type_desktop == 'mega' -%}
  <link rel="stylesheet" href="{{ 'component-mega-menu.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

<style>
      header-drawer {
        justify-self: start;
        margin-left: -1.2rem;
      }

      {%- if section.settings.sticky_header_type == 'reduce-logo-size' -%}
        .scrolled-past-header .header__heading-logo-wrapper {
          width: 75%;
        }
      {%- endif -%}

      {%- if section.settings.menu_type_desktop != "drawer" -%}
        @media screen and (min-width: 1023px) {
          header-drawer {
            display: none;
          }
        }
      {%- endif -%}

      .menu-drawer-container {
        display: flex;
      }
      .box-input-search {
        display:flex;
        width:max-content;
        border-bottom: 1px solid #9a9a9a;
        align-items:center;
    }
    .search-modal__form {
      width:100%;
      display:flex;
      align-items:center;

    }
      .input-search {
        border:none;
        outline: none;
        box-shadow: none;
        width:230px;
      }
      .search_button {
      border:none;
      all: unset;
      cursor: pointer;
  }
      .input-search:focus {
      border:none;
    }
      .h2 {
        font-weight: 700;
        font-size:5rem;
        letter-spacing: 12px;
        color:black;
      }
      .h2:hover {

    }
      .list-menu {
        list-style: none;
        padding: 0;
        margin: 0;
      }

      .list-menu--inline {
        display: inline-flex;
        flex-wrap: wrap;
      }

      summary.list-menu__item {
        padding-right: 2.7rem;
      }

      .list-menu__item {
        display: flex;
        align-items: center;
        line-height: calc(1 + 0.3 / var(--font-body-scale));
      }

      .list-menu__item--link {
        text-decoration: none;
        padding-bottom: 1rem;
        padding-top: 1rem;
        line-height: calc(1 + 0.8 / var(--font-body-scale));
      }


      .hide-menu-bar{
        display: block !important;
        left:0 !important;
        transition: 0.5s;

      }
      .hide-menu-cart{

        right:0% !important;
        transition: 0.5s;

      }

      @media screen and (max-width: 1023px) {
        .header {
          display:flex;
          flex-wrap: wrap ;
          justify-content: space-between;
          padding:0;
        }
        .search-modal__form {
          display:none;
        }
        .custom-menu-bar {
          display:none !important;
        }
        .small-hide {
          display: block !important;
      }
      .fa-heart {
        display:none ;}

        .header__icons {

        display: flex;
        justify-content: end;
          padding-right: 0px;
      }
      .custom-menu-cart {
      width:50% !important;}
      .search-modal__content .search-modal__form {
        display:block;
      }
      .search-modal__content {
      padding:0 10px;}
      }
      @media (max-width: 468px) {
        .header__icons {
          width:100%;
          display: flex;
          justify-content: end;
            padding-right: 0px;
        }
        .custom-menu-cart {
          width:90% !important;}
          }
          .search__input, .custom-search-our-site {
            font-size: 1rem !important;
          }
      }
</style>

{%- style -%}
  .header {

    padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 3rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 3rem;
  }

  .section-header {
    position: sticky; /* This is for fixing a Safari z-index issue. PR #2147 */
    margin-bottom: {{ section.settings.margin_bottom | times: 0.75 | round: 0 }}px;
  }
{%- endstyle -%}

<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

{%- liquid
  for block in section.blocks
    if block.type == '@app'
      assign has_app_block = true
    endif
  endfor
-%}

{% liquid
  assign header_tag = 'div'

  if section.settings.sticky_header_type != 'none'
    assign header_tag = 'sticky-header'
  endif
%}

<{{ header_tag }}
  {% if header_tag == 'sticky-header' %}
    data-sticky-type="{{ section.settings.sticky_header_type }}"
  {% endif %}
  class="header-wrapper color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator %} header-wrapper--border-bottom{% endif %}"
>
  {%- liquid
    assign social_links = false
    assign localization_forms = false

    if settings.social_twitter_link != blank or settings.social_facebook_link != blank or settings.social_pinterest_link != blank or settings.social_instagram_link != blank or settings.social_youtube_link != blank or settings.social_vimeo_link != blank or settings.social_tiktok_link != blank or settings.social_tumblr_link != blank or settings.social_snapchat_link != blank
      assign social_links = true
    endif

    if localization.available_countries.size > 1 and section.settings.enable_country_selector or section.settings.enable_language_selector and localization.available_languages.size > 1
      assign localization_forms = true
    endif
  -%}

  <header
    style="padding-left: 0; padding-right: 0;"
    class="header header--{{ section.settings.logo_position }} header--mobile-{{ section.settings.mobile_logo_position }} page-width{% if section.settings.menu_type_desktop == 'drawer' %} drawer-menu{% endif %}{% if section.settings.menu != blank %} header--has-menu{% endif %}{% if has_app_block %} header--has-app{% endif %}{% if social_links %} header--has-social{% endif %}{% if shop.customer_accounts_enabled %} header--has-account{% endif %}{% if localization_forms %} header--has-localizations{% endif %}"
  >
    {% comment %}
      CUSTOM INPUT SEARCH
    {% endcomment %}
    <form
      action="{{ routes.search_url }}"
      method="get"
      role="search"
      class="search search-modal__form"
      {% if section.settings.logo_position != 'top-center' %}
        style="justify-content: center"
      {% endif %}
    >
      <div class="box-input-search">
        <input
          class="input-search"
          id="abc"
          type="search"
          name="q"
          value="{{ search.terms | escape }}"
          placeholder="Search Products"
          {%- if settings.predictive_search_enabled -%}
            role="combobox"
            aria-expanded="false"
            aria-owns="predictive-search-results"
            aria-controls="predictive-search-results"
            aria-haspopup="listbox"
            aria-autocomplete="list"
            autocorrect="off"
            autocomplete="off"
            autocapitalize="off"
            spellcheck="false"
          {%- endif -%}
        >

        <button class="search_button" aria-label="{{ 'general.search.search' | t }}">
          <span class="svg-wrapper">
            {{- 'icon-search.svg' | inline_asset_content -}}
          </span>
        </button>
      </div>

      {%- if settings.predictive_search_enabled -%}
        <div class="predictive-search predictive-search--header" tabindex="-1" data-predictive-search>
          {%- render 'loading-spinner', class: 'predictive-search__loading-state' -%}
        </div>

        <span class="predictive-search-status visually-hidden" role="status" aria-hidden="true"></span>
      {%- endif -%}
    </form>

    {%- if section.settings.logo_position != 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
      <a href="{{ routes.root_url }}" class="header__heading-linkk header__heading-link link link--text focus-inset">
        {%- if settings.logo != blank -%}
          <div class="header__heading-logo-wrapper">
            {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
            {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
            {% capture sizes %}(max-width: {{ settings.logo_width | times: 2 }}px) 50vw, {{ settings.logo_width }}px{% endcapture %}
            {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
            {{
              settings.logo
              | image_url: width: 600
              | image_tag:
                class: 'header__heading-logo motion-reduce',
                widths: widths,
                height: logo_height,
                width: settings.logo_width,
                alt: logo_alt,
                sizes: sizes,
                preload: true
            }}
          </div>
        {%- else -%}
          {{ section.settings['custom-title-page'] }}
        {%- endif -%}
      </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}
    {% comment %}
      Custom menu
    {% endcomment %}
    {%- liquid
      if section.settings.menu != blank
        if section.settings.menu_type_desktop == 'dropdown'
          render 'header-dropdown-menu'
        elsif section.settings.menu_type_desktop != 'drawer'
          render 'header-mega-menu'
        endif
      endif
    %}

    {%- if section.settings.logo_position == 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
      <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
        {%- if settings.logo != blank -%}
          <div class="header__heading-logo-wrapper">
            {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
            {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
            {% capture sizes %}(min-width: 750px) {{ settings.logo_width }}px, 50vw{% endcapture %}
            {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
            {{
              settings.logo
              | image_url: width: 600
              | image_tag:
                class: 'header__heading-logo',
                widths: widths,
                height: logo_height,
                width: settings.logo_width,
                alt: logo_alt,
                sizes: sizes,
                preload: true
            }}
          </div>
        {%- else -%}
          <span class="h2">{{ shop.name }}</span>
        {%- endif -%}
      </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}
    {% comment %}
      CUSTOM MENU ICON
    {% endcomment %}
    <div class="header__icons{% if section.settings.enable_country_selector or section.settings.enable_language_selector %} header__icons--localization header-localization{% endif %}">
      <a href="#" class=" header__icon header__icon--cart link focus-inset"><i class="fa-regular fa-heart"></i></a>
      <a href="#" class="custom-hide-menu-cart header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
        <span class="svg-wrapper">{{ 'icon-cart.svg' | inline_asset_content }}</span>

        <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
        <div class="cart-count-bubble">
          {%- if cart.item_count < 100 -%}
            <span class="custom-update-cart" aria-hidden="true">{{ cart.item_count }}</span>
          {%- endif -%}
          <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
        </div>
      </a>
      {%- liquid
        if section.settings.menu != blank
          render 'header-drawer'
        endif

        if section.settings.logo_position == 'top-center' or section.settings.menu == blank
          render 'header-search', input_id: 'Search-In-Modal-1'
        endif
      -%}
      {%- if shop.customer_accounts_enabled -%}
        <a
          href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}"
          class="header__icon header__icon--account link focus-inset{% if section.settings.menu != blank %} small-hide{% endif %}"
          rel="nofollow"
        >
          {%- if section.settings.enable_customer_avatar -%}
            <account-icon>
              {%- if customer and customer.has_avatar? -%}
                {{ customer | avatar }}
              {%- else -%}
                <span class="svg-wrapper">{{ 'icon-account.svg' | inline_asset_content }}</span>
              {%- endif -%}
            </account-icon>
          {%- else -%}
            <span class="svg-wrapper">{{ 'icon-account.svg' | inline_asset_content }}</span>
          {%- endif -%}
          <span class="visually-hidden">
            {%- liquid
              if customer
                echo 'customer.account_fallback' | t
              else
                echo 'customer.log_in' | t
              endif
            -%}
          </span>
        </a>
      {%- endif -%}

      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
        {%- endcase -%}
      {%- endfor -%}

      <a href="#" class="custom-menu-bar header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
        <i class="fa-solid fa-bars"></i>
      </a>
    </div>
    {% render 'custom-menu-bars' %}
    {% render 'custom-tab-cart' %}
  </header>
</{{ header_tag }}>

{% render 'custom-box-fixed' %}
{%- if settings.cart_type == 'notification' -%}
  {%- render 'cart-notification',
    color_scheme: section.settings.color_scheme,
    desktop_menu_type: section.settings.menu_type_desktop
  -%}
{%- endif -%}
{% comment %}
  xử lý js custom menu bar
{% endcomment %}
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const iconMenuBar = document.querySelector('.custom-menu-bar');
    const boxFixed = document.querySelector('.box-fixed-custom');
    const tabMenuBar = document.querySelector('.tab-menu-bars-custom');
    const closeMenuBar = document.querySelector('.close-tab-menu-bars');
    const preMenuCart = document.querySelector('.custom-hide-menu-cart');
    const tabMenuCart = document.querySelector('.custom-menu-cart');
    const closeMenuCart = document.querySelector('.close-tab-menu-cart');
    const updateCountCart = document.querySelector('.custom-update-cart');
    function setupCartDelegation() {
      const parent = document.querySelector('.custom-items-cart');
      if (!parent) return;
      parent.addEventListener('click', function (e) {
        const removeBtn = e.target.closest('.remove-btn');
        if (!removeBtn) return;
        const key = removeBtn.dataset.key;
        const itemEl = document.querySelector(`.custom-item-cart[data-key="${key}"]`);
        removeBtn.classList.add('loading');
        itemEl.classList.add('removing');
        setTimeout(() => {
          fetch('/cart/change.js', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ id: key, quantity: 0 }),
          })
            .then(() => fetch('/cart.js'))
            .then((res) => res.json())
            .then((cart) => {
              if (cart.items.length == 0) {
                document.querySelector('.zero-cart').style.display = 'block';
                document.querySelector('.custom-total-cart').style.display = 'none';
                document.querySelector('.custom-view-cart').style.display = 'none';
                document.querySelector('.custom-check-out').style.display = 'none';
              }
              updateCartUII(cart.items, cart);
            });
        }, 200);
      });
    }
    setupCartDelegation();
    preMenuCart.onclick = function () {
      boxFixed.classList.add('hide-menu-bar');
      tabMenuCart.classList.add('hide-menu-cart');
      fetch('/cart.js')
        .then((res) => res.json())
        .then((cart) => {
          if (cart.items.length > 0) {
            document.querySelector('.zero-cart').style.display = 'none';
            document.querySelector('.custom-total-cart').style.display = 'flex';
            document.querySelector('.custom-view-cart').style.display = 'block';
            document.querySelector('.custom-check-out').style.display = 'block';
          }
          updateCartUII(cart.items, cart);
        });
    };
    iconMenuBar.onclick = function () {
      boxFixed.classList.add('hide-menu-bar');
      tabMenuBar.classList.add('hide-menu-bar');
    };
    closeMenuBar.onclick = function () {
      boxFixed.classList.remove('hide-menu-bar');
      tabMenuBar.classList.remove('hide-menu-bar');
    };
    boxFixed.addEventListener('click', function () {
      tabMenuBar.classList.remove('hide-menu-bar');
      boxFixed.classList.remove('hide-menu-bar');
      tabMenuCart.classList.remove('hide-menu-cart');
      if (tabMenuCart.classList.contains('hide-menu-cart')) {
        fetch('/cart.js')
          .then((res) => res.json())
          .then((cart) => {
            updateCountCart.textContent = cart.items.reduce((sum, item) => sum + item.quantity, 0);
          });
      }
    });

    closeMenuCart.onclick = function () {
      fetch('/cart.js')
        .then((res) => res.json())
        .then((cart) => {
          updateCountCart.textContent = cart.items.reduce((sum, item) => sum + item.quantity, 0);
          boxFixed.classList.remove('hide-menu-bar');
          tabMenuCart.classList.remove('hide-menu-cart');
        });
    };
  });
  if (window.Shopify && Shopify.designMode) {
    const reinitCustomHeader = (container) => {
      // Nếu container có được truyền vào thì chỉ setup lại phần đó
      const root = container || document;

      const iconMenuBar = root.querySelector('.custom-menu-bar');
      const boxFixed = root.querySelector('.box-fixed-custom');
      const tabMenuBar = root.querySelector('.tab-menu-bars-custom');
      const closeMenuBar = root.querySelector('.close-tab-menu-bars');
      const preMenuCart = root.querySelector('.custom-hide-menu-cart');
      const tabMenuCart = root.querySelector('.custom-menu-cart');
      const closeMenuCart = root.querySelector('.close-tab-menu-cart');
      const updateCountCart = root.querySelector('.custom-update-cart');

      if (!iconMenuBar || !boxFixed || !tabMenuBar || !preMenuCart || !tabMenuCart || !closeMenuBar || !closeMenuCart) {
        console.warn('Không tìm thấy một số phần tử trong header để khởi tạo lại.');
        return;
      }

      iconMenuBar.onclick = function () {
        boxFixed.classList.add('hide-menu-bar');
        tabMenuBar.classList.add('hide-menu-bar');
      };

      preMenuCart.onclick = function () {
        boxFixed.classList.add('hide-menu-bar');
        tabMenuCart.classList.add('hide-menu-cart');
        fetch('/cart.js')
          .then((res) => res.json())
          .then((cart) => {
            if (cart.items.length > 0) {
              document.querySelector('.zero-cart').style.display = 'none';
              document.querySelector('.custom-total-cart').style.display = 'flex';
              document.querySelector('.custom-view-cart').style.display = 'block';
              document.querySelector('.custom-check-out').style.display = 'block';
            }
            updateCartUII(cart.items, cart);
          });
      };

      closeMenuBar.onclick = function () {
        boxFixed.classList.remove('hide-menu-bar');
        tabMenuBar.classList.remove('hide-menu-bar');
      };

      closeMenuCart.onclick = function () {
        fetch('/cart.js')
          .then((res) => res.json())
          .then((cart) => {
            updateCountCart.textContent = cart.items.reduce((sum, item) => sum + item.quantity, 0);
            boxFixed.classList.remove('hide-menu-bar');
            tabMenuCart.classList.remove('hide-menu-cart');
          });
      };

      boxFixed.addEventListener('click', function () {
        tabMenuBar.classList.remove('hide-menu-bar');
        boxFixed.classList.remove('hide-menu-bar');
        tabMenuCart.classList.remove('hide-menu-cart');
        if (tabMenuCart.classList.contains('hide-menu-cart')) {
          fetch('/cart.js')
            .then((res) => res.json())
            .then((cart) => {
              updateCountCart.textContent = cart.items.reduce((sum, item) => sum + item.quantity, 0);
            });
        }
      });
    };

    // Các sự kiện của Shopify Editor
    ['shopify:section:load', 'shopify:section:select', 'shopify:section:deselect'].forEach((eventName) => {
      document.addEventListener(eventName, (e) => {
        console.log(`[Shopify Editor] Event: ${eventName}`, e.detail);
        requestAnimationFrame(() => {
          reinitCustomHeader(e.target);
        });
      });
    });
  }
</script>
{% javascript %}
  {% comment %}
    Code shopify
  {% endcomment %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.querySelector('.section-header');
      this.headerIsAlwaysSticky =
        this.getAttribute('data-sticky-type') === 'always' ||
        this.getAttribute('data-sticky-type') === 'reduce-logo-size';
      this.headerBounds = {};

      this.setHeaderHeight();

      window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));

      if (this.headerIsAlwaysSticky) {
        this.header.classList.add('shopify-section-header-sticky');
      }

      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => (this.preventReveal = true);

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    setHeaderHeight() {
      document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (this.preventHide) return;
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        this.header.classList.remove('scrolled-past-header');
        requestAnimationFrame(this.reset.bind(this));
      }

      this.currentScrollTop = scrollTop;
    }

    hide() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }

    reveal() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
      this.disclosures.forEach((disclosure) => disclosure.close());
    }

    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      this.searchModal.close(false);
    }
  }

  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: '?q={search_term_string}' %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "max_blocks": 3,
  "settings": [
    {
      "type": "select",
      "id": "logo_position",
      "options": [
        {
          "value": "top-center",
          "label": "t:sections.header.settings.logo_position.options__3.label"
        },
        {
          "value": "middle-left",
          "label": "t:sections.header.settings.logo_position.options__1.label"
        },
        {
          "value": "middle-center",
          "label": "t:sections.header.settings.logo_position.options__4.label"
        }
      ],
      "default": "middle-left",
      "label": "t:sections.header.settings.logo_position.label",
      "info": "t:sections.header.settings.logo_help.content"
    },
    {
      "type": "select",
      "id": "mobile_logo_position",
      "options": [
        {
          "value": "center",
          "label": "t:sections.header.settings.mobile_logo_position.options__1.label"
        },
        {
          "value": "left",
          "label": "t:sections.header.settings.mobile_logo_position.options__2.label"
        }
      ],
      "default": "center",
      "label": "t:sections.header.settings.mobile_logo_position.label"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "select",
      "id": "menu_type_desktop",
      "options": [
        {
          "value": "dropdown",
          "label": "t:sections.header.settings.menu_type_desktop.options__1.label"
        },
        {
          "value": "mega",
          "label": "t:sections.header.settings.menu_type_desktop.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.header.settings.menu_type_desktop.options__3.label"
        }
      ],
      "default": "dropdown",
      "label": "t:sections.header.settings.menu_type_desktop.label"
    },
    {
      "type": "select",
      "id": "sticky_header_type",
      "options": [
        {
          "value": "none",
          "label": "t:sections.header.settings.sticky_header_type.options__1.label"
        },
        {
          "value": "on-scroll-up",
          "label": "t:sections.header.settings.sticky_header_type.options__2.label"
        },
        {
          "value": "always",
          "label": "t:sections.header.settings.sticky_header_type.options__3.label"
        },
        {
          "value": "reduce-logo-size",
          "label": "t:sections.header.settings.sticky_header_type.options__4.label"
        }
      ],
      "default": "on-scroll-up",
      "label": "t:sections.header.settings.sticky_header_type.label"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__1.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "color_scheme",
      "id": "menu_color_scheme",
      "label": "t:sections.header.settings.menu_color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__utilities.content"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": true,
      "label": "t:sections.header.settings.enable_country_selector.label",
      "info": "t:sections.header.settings.enable_country_selector.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": true,
      "label": "t:sections.header.settings.enable_language_selector.label",
      "info": "t:sections.header.settings.enable_language_selector.info"
    },
    {
      "type": "checkbox",
      "id": "enable_customer_avatar",
      "default": true,
      "label": "t:sections.header.settings.enable_customer_avatar.label",
      "info": "t:sections.header.settings.enable_customer_avatar.info"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing"
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.header.settings.margin_bottom.label",
      "default": 0
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 20
    },
    {
      "type": "richtext",
      "id": "custom-title-page",
      "label": "Logo web",
      "default": "<p>Logo Page</p>"
    }
  ],
  "blocks": [
    {
      "type": "@app"
    }
  ]
}
{% endschema %}
